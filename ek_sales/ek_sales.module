<?php

    ///////////////////////////////////////////////////
    //                  COPYRIGHT                    //
    //                                               //
    // DEVELOPPED BY ARREA LTD                       //
    // all rights reserved                           //
    // Please read and agree with software           //
    // application license                           //
    ///////////////////////////////////////////////////

/**
 * @file
 *  module sales.
 */

/**
 * Implementation hook download.
 */
function ek_sales_file_download($uri) {
  if (strpos($uri,'/sales/')) {
    if (\Drupal::currentUser()->hasPermission('create_purchase'))  {
        return array('Content-Type' => \Drupal::service('file.mime_type.guesser')->guess($uri));
        }
  }
}


/**
 * Implementation hook_theme().
 */
function ek_sales_theme() {
  return array(
      // for the dashboard
    'ek_sales_dashboard' => array
    (
      'template' => 'ek_sales_dashboard',
      'variables' => array('items' => array()),
    ),   
    // for the sales data
    'ek_sales_data' => array
    (
      'template' => 'ek_sales_data',
      'variables' => array('items' => array()),
    ),
    //template for attached docs in sales data page  
    'ek_sales_doc_view' => array
    (
      'template' => 'ek_sales_doc_view',
      'variables' => array('items' => array()),
    ),       
    'iframe' => array
    (
      'template' => 'iframe',
      'variables' => array('items' => array()),
    ),        
  );     
}

  
/**
 * Implements hook_views_data().
 */
 function ek_sales_views_data() {
     
    $data['ek_sales_invoice']['table']['group'] = t('ek invoices');
    $data['ek_sales_invoice']['table']['base'] = array(
    'field' => 'id', // This is the identifier field for the view.
    'title' => t('ek sales invoices'),
    'help' => t('Sales invoices data'),
    'database' => 'external_db',
    'weight' => -11,
    );  

    $data['ek_sales_invoice']['id'] = array(
        'title' => t('Invoice unique id'),
        'help' => t('Invoice unique id'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['serial'] = array(
        'title' => t('Serial number'),
        'help' => t('Serial number'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['do_no'] = array(
        'title' => t('Delivery order ref. number'),
        'help' => t('Delivery order ref. number'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['head'] = array(
        'title' => t('Header reference'),
        'help' => t('Header name'),
        'field' => array('id' => 'standard', ),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',), 
        'relationship' => array(
            'base' => 'ek_company', // The name of the table to join with
            'field' => 'head', // The name of the field to join with
            'id' => 'standard',
            'label' => t('Company ref'),
            'type' => 'INNER',
          ),   
    );
    $data['ek_sales_invoice']['allocation'] = array(
        'title' => t('Allocation id reference'),
        'help' => t('Allocation id reference'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
        'relationship' => array(
            'base' => 'ek_company', // The name of the table to join with
            'field' => 'allocation', // The name of the field to join with
            'id' => 'standard',
            'label' => t('Company ref'),
          ),
    );
    $data['ek_sales_invoice']['status'] = array(
        'title' => t('Payment status'),
        'help' => t('Payment status: 0 = unpaid, 1 = paid, 2 = partially paid'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['client'] = array(
        'title' => t('Client'), 
        'help' => t('Client from address book'), 
        'field' => array('id' => 'standard', ),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',), 
        'relationship' => array(
            'base' => 'ek_address_book', // The name of the table to join with
            'field' => 'client', // The name of the field to join with
            'id' => 'standard',
            'label' => t('Address book ref'),
          ),     
  
    );
    if(\Drupal::moduleHandler()->moduleExists('ek_logistics')) {
        $data['ek_sales_invoice']['do_no'] = array(
            'title' => t('Delivery order ref. number'),
            'help' => t('Delivery order ref. number'),
            'field' => array('id' => 'standard',),
            'sort' => array('id' => 'standard',),
            'filter' => array('id' => 'string',),
            'argument' => array('id' => 'string',),
            'relationship' => array(
                'base' => 'ek_logi_delivery', // The name of the table to join with
                'field' => 'do_no', // The name of the field to join with
                'id' => 'standard',
                'base field' => 'serial',
                'label' => t('Logisitics'),
            ),  
        );
    }
    if(\Drupal::moduleHandler()->moduleExists('ek_projects')) {
        $data['ek_sales_invoice']['pcode'] = array(
            'title' => t('Project code reference'),
            'help' => t('Project code reference'),
            'field' => array('id' => 'standard',),
            'sort' => array('id' => 'standard',),
            'filter' => array('id' => 'string',),
            'argument' => array('id' => 'string',),
            'relationship' => array(
                'base' => 'ek_project', // The name of the table to join with
                'field' => 'pcode', // The name of the field to join with
                'id' => 'standard',
                'base field' => 'pcode',
                'label' => t('Project'),
            ),        
        );
    }
    $data['ek_sales_invoice']['amount'] = array(
        'title' => t('Total value in local currency'),
        'help' => t('Total value in local currency'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['currency'] = array(
        'title' => t('Local currency'),
        'help' => t('Local currency'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['amountbase'] = array(
        'title' => t('Total value in base currency'),
        'help' => t('Total value in base currency'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['amountreceived'] = array(
        'title' => t('Total value paid'),
        'help' => t('Total value paid'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['date'] = array(
        'title' => t('Document date'),
        'help' => t('Document date'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['amountreceived'] = array(
        'title' => t('Total value paid'),
        'help' => t('Total value paid'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    $data['ek_sales_invoice']['due'] = array(
        'title' => t('Invoice due terms in days'),
        'help' => t('Invoice due terms in days'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['title'] = array(
        'title' => t('Document title'),
        'help' => t('Document title'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    $data['ek_sales_invoice']['comment'] = array(
        'title' => t('Document open comments'),
        'help' => t('Document open comments'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
    
    
    /*
     * Table invoice details
     */
    $data['ek_sales_invoice_details']['table']['group'] = t('ek invoiced items details');

    $data['ek_sales_invoice_details']['table']['base'] = array(
        'field' => 'id', // This is the identifier field for the view.
        'title' => t('ek invoiced items details'),
        'help' => t('ek invoiced items details'),
        'weight' => -11,
        'database' => 'external_db',
    );

    $data['ek_sales_invoice_details']['table']['join'] = array(
        // Index this array by the table name to which this table refers.
        // 'left_field' is the primary key in the referenced table.
        // 'field' is the foreign key in this table.
        'ek_sales_invoice' => array(
          'left_field' => 'serial',
          'field' => 'serial',
          'database' => 'external_db',
        ),
    ); 
    
    $data['ek_sales_invoice_details']['item'] = array(
        'title' => t('Item description or code'),
        'help' => t('Item description or cod'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );
     $data['ek_sales_invoice_details']['itemdetail'] = array(
        'title' => t('Extended item description'),
        'help' => t('Extended item description'),
        'field' => array('id' => 'standard',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'string',),
        'argument' => array('id' => 'string',),
    );   
    $data['ek_sales_invoice_details']['value'] = array(
        'title' => t('Item unit value'),
        'help' => t('Item unit value'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );    
    $data['ek_sales_invoice_details']['quantity'] = array(
        'title' => t('Item quantity'),
        'help' => t('Item quantity'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );    
    $data['ek_sales_invoice_details']['total'] = array(
        'title' => t('Item total invoiced value (unit value x quantity in local currency)'),
        'help' => t('Item total invoiced value (unit value x quantity in local currency)'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    ); 
    $data['ek_sales_invoice_details']['totalbase'] = array(
        'title' => t('Item total invoiced value (in base currency)'),
        'help' => t('Item total invoiced value (in base currency)'),
        'field' => array('id' => 'numeric',),
        'sort' => array('id' => 'standard',),
        'filter' => array('id' => 'numeric',),
    );
    
    
    
    
    
    
    return $data;
 }

?>